<variable>This</variable><plain> </plain><error>is wrong but should not crash ] ) } !</error><br/>
<plain></plain><br/>
<comment># comment</comment><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>BR2_PACKAGE_GAMMARAY</symbolVar><br/>
<plain>        </plain><type>bool</type><plain> </plain><quotedPrompt>"gammaray"</quotedPrompt><br/>
<plain>        </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>BR2_PACKAGE_QT5</symbolVar><br/>
<plain>        </plain><property>help</property><br/>
<helpText>          GammaRay Qt introspection probe.</helpText><br/>
<helpText>          second line of help, with correct indentation</helpText><br/>
<helpText></helpText><br/>
<helpText>          GammaRay Qt introspection probe.</helpText><br/>
<helpText>          second line of help, with correct indentation</helpText><br/>
<helpText>         </helpText><error>third line underindented and thus wrong</error><br/>
<plain>        </plain><property>default</property><plain> </plain><symbolConst>'true'</symbolConst><br/>
<keyword>config</keyword><plain> </plain><symbolVar>W1_MASTER_GPIO_CUSTOM</symbolVar><br/>
<plain>	</plain><type>tristate</type><plain> </plain><quotedPrompt>"Custom GPIO-based W1 driver"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>GENERIC_GPIO</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>W1_GPIOconfig</symbolVar><plain> </plain><error>AG71XX</error><br/>
<plain>	</plain><type>tristate</type><plain> </plain><quotedPrompt>"Atheros AR7XXX/AR9XXX built-in ethernet mac support"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ATH79</symbolVar><br/>
<plain>	</plain><property>imply</property><plain> </plain><symbolVar>HAS_TXX9_SERIAL</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><symbolVar>LD_VERSION</symbolVar><plain> </plain><exprOp>>=</exprOp><plain> </plain><symbolVar>225000000</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>LD_IS_LLD</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>PHYLIB</symbolVar><br/>
<plain>	</plain><deprecatedProperty>---help---</deprecatedProperty><br/>
<helpText>	  If you wish to compile a kernel for AR7XXX/91XXX and enable</helpText><br/>
<helpText>	  ethernet support, then you should always answer Y to this.</helpText><br/>
<helpText></helpText><br/>
<keyword>comment</keyword><plain> </plain><quotedPrompt>"module support disabled"</quotedPrompt><br/>
<plain>    </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><exprOp>!</exprOp><symbolVar>MODULES</symbolVar><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><deprecatedUnquotedPrompt>myMenu</deprecatedUnquotedPrompt><br/>
<plain>      </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>NET</symbolVar><br/>
<keyword>config</keyword><plain> </plain><symbolVar>NETDEVICES</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Atheros AR71xx built-in ethernet driver debugging"</quotedPrompt><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><symbolVar>ds</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Atheros AR71xx built-in ethernet driver debugging messages.</helpText><br/>
<keyword>endmenu</keyword><br/>
<keyword>if</keyword><plain> </plain><symbolVar>TARGET_OX820</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>SYS_CPU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"arm1136"</symbolConst><br/>
<plain></plain><br/>
<keyword>endif</keyword><br/>
<plain></plain><br/>
<keyword>if</keyword><plain> </plain><symbolVar>AG71XX</symbolVar><br/>
<keyword>config</keyword><plain> </plain><symbolVar>AG71XX_DEBUG</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Atheros AR71xx built-in ethernet driver debugging"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Atheros AR71xx built-in ethernet driver debugging messages.</helpText><br/>
<keyword>endif</keyword><br/>
<plain></plain><br/>
<comment># comment</comment><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"System setup"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>choice</keyword><br/>
<plain>	</plain><property>prompt</property><plain> </plain><quotedPrompt>"Alpha system type"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><deprecatedBadChoiceType>string</deprecatedBadChoiceType><plain> </plain><quotedPrompt>"bad"</quotedPrompt><br/>
<plain>	</plain><deprecatedProperty>---help---</deprecatedProperty><br/>
<helpText>	  This is the system type of your hardware.</helpText><br/>
<helpText></helpText><br/>
<helpText>	</helpText><keyword>config</keyword><plain> </plain><symbolVar>HZ_32</symbolVar><br/>
<plain>		</plain><type>bool</type><plain> </plain><quotedPrompt>"32 Hz"</quotedPrompt><br/>
<plain>	</plain><keyword>config</keyword><plain> </plain><symbolVar>HZ_64</symbolVar><br/>
<plain>		</plain><type>bool</type><plain> </plain><quotedPrompt>"64 Hz"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Generic"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>TTY</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_EISA</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>GENERIC_BUG_RELATIVE_POINTERS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>X86_64</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"64-bit kernel"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolConst>"</symbolConst><expansionDelimiter>$(</expansionDelimiter><expansion>SUBARCH</expansion><expansionDelimiter>)</expansionDelimiter><symbolConst>"</symbolConst><plain> </plain><exprOp>=</exprOp><plain> </plain><symbolConst>"x86"</symbolConst><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Support the legacy </quotedPrompt><escapedCharacter>\"</escapedCharacter><quotedPrompt>mmu-masters</quotedPrompt><escapedCharacter>\"</escapedCharacter><quotedPrompt> devicetree bindings"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ARM_SMMU</symbolVar><exprOp>=</exprOp><tristateConst>y</tristateConst><plain> </plain><exprOp>&&</exprOp><plain> </plain><symbolVar>OF</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  A generic kernel will run on all supported Alpha hardware.</helpText><br/>
<helpText></helpText><br/>
<keyword>endchoice</keyword><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>VGA_HOSE</symbolVar><br/>
<plain>	</plain><type>bool</type><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>VGA_CONSOLE</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>(</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_TITAN</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_MARVEL</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_TSUNAMI</symbolVar><exprOp>)</exprOp><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>3</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Use WTINT"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_SRM</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_QEMU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_EV5</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_EV56</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><exprOp>(</exprOp><symbolVar>ALPHA_EV4</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_LCA</symbolVar><exprOp>)</exprOp><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_SRM</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"y"</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>PPC_POWERNV</symbolVar><br/>
<plain>	</plain><property>range</property><plain> </plain><symbolVar>2</symbolVar><plain> </plain><symbolVar>32</symbolVar><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"32"</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_MARVEL</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>'4'</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_MARVEL</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support VGA on an arbitrary hose; needed for several platforms</helpText><br/>
<helpText>	  which always have multiple hoses, and whose consoles support it.</helpText><br/>
<helpText></helpText><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC Architecture Configuration"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC Platform/SoC/Board"</quotedPrompt><br/>
<plain></plain><br/>
<comment>#New platform adds here</comment><br/>
<source>source</source><plain> </plain><quotedSourceString>"arch/arc/plat-eznps/Kconfig"</quotedSourceString><br/>
<source>source</source><plain> </plain><quotedSourceString>'arch/arc/plat-hsdk/Kconfig'</quotedSourceString><br/>
<plain></plain><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC CPU Configuration"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>choice</keyword><br/>
<plain>	</plain><property>prompt</property><plain> </plain><quotedPrompt>"ARC Core"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>ARC_CPU_HS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ISA_ARCV2</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  bla bla</helpText><br/>
<helpText></helpText><br/>
<keyword>if</keyword><plain> </plain><symbolVar>ISA_ARCOMPACT</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARC_CPU_750D</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"ARC750D"</quotedPrompt><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>ARC_CANT_LLSC</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support for ARC750 core</helpText><br/>
<helpText></helpText><br/>
<keyword>endif</keyword><plain> </plain><comment>#ISA_ARCOMPACT</comment><br/>
<plain></plain><br/>
<keyword>endchoice</keyword><br/>
<plain></plain><br/>
<keyword>if</keyword><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>NR_CPUS</symbolVar><br/>
<plain>	</plain><type>int</type><plain> </plain><quotedPrompt>"Maximum number of CPUs (2-4096)"</quotedPrompt><br/>
<plain>	</plain><property>range</property><plain> </plain><symbolVar>2</symbolVar><plain> </plain><symbolVar>4096</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"4"</symbolConst><br/>
<plain></plain><br/>
<keyword>endif</keyword><plain> </plain><comment>#SMP</comment><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARC_MMU_V4</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"MMU v4"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ISA_ARCV2</symbolVar><br/>
<plain></plain><br/>
<keyword>endmenu</keyword><plain>   </plain><comment># "ARC CPU Configuration"</comment><br/>
<plain></plain><br/>
<keyword>menuconfig</keyword><plain> </plain><symbolVar>ARC_PLAT_EZNPS</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"</quotedPrompt><escapedCharacter>\"</escapedCharacter><quotedPrompt>EZchip</quotedPrompt><escapedCharacter>\"</escapedCharacter><quotedPrompt> ARC dev platform"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ISA_ARCOMPACT</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>CPU_BIG_ENDIAN</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>CLKSRC_NPS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>PHYS_ADDR_T_64BIT</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support for EZchip development platforms,</helpText><br/>
<helpText>	  based on ARC700 cores.</helpText><br/>
<helpText>	  We handle few flavors:</helpText><br/>
<helpText>	    - Hardware Emulator AKA HE which is FPGA based chassis</helpText><br/>
<helpText>	    - Simulator based on MetaWare nSIM</helpText><br/>
<helpText>	    - NPS400 chip based on ASIC</helpText><br/>
<helpText></helpText><br/>
<comment># </comment><SPDX Tag>SPDX-License-Identifier:</SPDX Tag><SPDX Value> </SPDX Value><SPDX License>GPL-2.0-only</SPDX License><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARM64</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_DYNAMIC_FTRACE_WITH_REGS</symbolVar><plain> \</plain><br/>
<plain>		</plain><keyword>if</keyword><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>cc-option</expansion><argumentSeparator>,</argumentSeparator><expansion>-fpatchable-function-entry=2</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_EFFICIENT_UNALIGNED_ACCESS</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  ARM 64-bit (AArch64) Linux support.</helpText><br/>
<helpText></helpText><br/>
<keyword>config</keyword><plain> </plain><symbolVar>PHYS_OFFSET</symbolVar><br/>
<plain>	</plain><type>hex</type><plain> </plain><quotedPrompt>"Physical address of main memory"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>MMU</symbolVar><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><exprOp>!</exprOp><symbolVar>ARM_PATCH_PHYS_VIRT</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>DRAM_BASE</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>MMU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x00000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_EBSA110</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_FOOTBRIDGE</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_INTEGRATOR</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_REALVIEW</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x10000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_OMAP1</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ARCH_RPC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x20000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_S5PV210</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xc0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_SA1100</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Please provide the physical address corresponding to the</helpText><br/>
<helpText>	  location of main memory in your system.</helpText><br/>
<helpText></helpText><br/>
<keyword>comment</keyword><plain> </plain><quotedPrompt>"S3C2416 Boards"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>KERNEL_RAM_BASE_ADDRESS</symbolVar><br/>
<plain>	</plain><type>hex</type><plain> </plain><quotedPrompt>"Virtual address of memory base"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xe0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SOC_TMS320C6455</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xe0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SOC_TMS320C6457</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>CC_IS_GCC</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>success</expansion><argumentSeparator>,</argumentSeparator><expansion>echo "</expansion><expansionDelimiter>$(</expansionDelimiter><expansion>CC_VERSION_TEXT</expansion><expansionDelimiter>)</expansionDelimiter><expansion>" | grep -q gcc</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<error>endif # error</error><br/>
<plain></plain><br/>
<comment># next line caused hang, see https://phabricator.kde.org/D18509</comment><br/>
<keyword>menu</keyword><br/>
<plain></plain><br/>
<comment># the next lines should all be fine</comment><br/>
<variable>plain</variable><assignmentOperator>:=</assignmentOperator><assignmentValue>plain_value</assignmentValue><br/>
<plain> 	 </plain><variable>with_whitespace</variable><plain> 	</plain><assignmentOperator>:=</assignmentOperator><plain> 	 </plain><assignmentValue>plain value whitespace</assignmentValue><br/>
<variable>value_with_expansion</variable><plain>		</plain><assignmentOperator>:=</assignmentOperator><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>ARCH</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<variable>plain_expansion_mix</variable><plain>		</plain><assignmentOperator>:=</assignmentOperator><plain> </plain><assignmentValue>Linux/</assignmentValue><expansionDelimiter>$(</expansionDelimiter><expansion>ARCH</expansion><expansionDelimiter>)</expansionDelimiter><assignmentValue> </assignmentValue><expansionDelimiter>$(</expansionDelimiter><expansion>KERNELVERSION</expansion><expansionDelimiter>)</expansionDelimiter><assignmentValue> Kernel Configuration</assignmentValue><br/>
<plain></plain><br/>
<comment># function definition</comment><br/>
<variable>cc-option-bit</variable><plain> 			</plain><assignmentOperator>=</assignmentOperator><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>if-success</expansion><argumentSeparator>,</argumentSeparator><expansionDelimiter>$(</expansionDelimiter><expansion>CC</expansion><expansionDelimiter>)</expansionDelimiter><expansion> -Werror </expansion><expansionDelimiter>$(</expansionDelimiter><expansion>1</expansion><expansionDelimiter>)</expansionDelimiter><expansion> -E -x c /dev/null -o /dev/null</expansion><argumentSeparator>,</argumentSeparator><expansionDelimiter>$(</expansionDelimiter><expansion>1</expansion><expansionDelimiter>))</expansionDelimiter><br/>
<plain></plain><br/>
<comment># function call</comment><br/>
<expansionDelimiter>$(</expansionDelimiter><expansion>cc-option-bit</expansion><argumentSeparator>,</argumentSeparator><expansion>-m64</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># function call and storing the result</comment><br/>
<variable>m32-flag</variable><plain>			</plain><assignmentOperator>:=</assignmentOperator><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>cc-option-bit</expansion><argumentSeparator>,</argumentSeparator><expansion>-m32</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># call to known function</comment><br/>
<variable>name</variable><plain>				</plain><assignmentOperator>:=</assignmentOperator><plain> </plain><expansionDelimiter>$(</expansionDelimiter><builtinFunction>filename</builtinFunction><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># call to known function with arguments</comment><br/>
<expansionDelimiter>$(</expansionDelimiter><builtinFunction>warning-if</builtinFunction><argumentSeparator>,</argumentSeparator><expansion>y</expansion><argumentSeparator>,</argumentSeparator><expansion>hello world 1</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># ... with nested expansions</comment><br/>
<expansionDelimiter>$(</expansionDelimiter><builtinFunction>error-if</builtinFunction><argumentSeparator>,</argumentSeparator><expansionDelimiter>$(</expansionDelimiter><expansion>success</expansion><argumentSeparator>,</argumentSeparator><expansion> </expansion><expansionDelimiter>$(</expansionDelimiter><expansion>LD</expansion><expansionDelimiter>)</expansionDelimiter><expansion> -v | grep -q gold</expansion><expansionDelimiter>)</expansionDelimiter><argumentSeparator>,</argumentSeparator><expansion> gold linker '</expansion><expansionDelimiter>$(</expansionDelimiter><expansion>LD</expansion><expansionDelimiter>)</expansionDelimiter><expansion>' not supported</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># expansion in different contexts</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>FOO_</symbolVar><expansionDelimiter>$(</expansionDelimiter><expansion>BAR</expansion><expansionDelimiter>$(</expansionDelimiter><expansion>BAZ</expansion><expansionDelimiter>))</expansionDelimiter><br/>
<plain>	</plain><type>int</type><plain> </plain><quotedPrompt>"</quotedPrompt><expansionDelimiter>$(</expansionDelimiter><builtinFunction>filename</builtinFunction><expansionDelimiter>)</expansionDelimiter><quotedPrompt>"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><expansionDelimiter>$(</expansionDelimiter><builtinFunction>lineno</builtinFunction><expansionDelimiter>)</expansionDelimiter><plain> </plain><keyword>if</keyword><plain> </plain><expansionDelimiter>$(</expansionDelimiter><builtinFunction>lineno</builtinFunction><expansionDelimiter>)</expansionDelimiter><plain> </plain><exprOp>>=</exprOp><plain> </plain><symbolVar>5</symbolVar><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"A MENU"</quotedPrompt><br/>
<property>visible</property><plain> </plain><property>if</property><plain> </plain><symbolVar>01</symbolVar><plain> </plain><exprOp>></exprOp><plain> </plain><symbolVar>00</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>A_BOOL</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><tristateConst>y</tristateConst><plain> </plain><exprOp>&&</exprOp><plain> </plain><tristateConst>m</tristateConst><plain> </plain><exprOp>||</exprOp><plain> !!</plain><exprOp>(</exprOp><plain>!</plain><exprOp>(</exprOp><plain>!!</plain><tristateConst>n</tristateConst><exprOp>))</exprOp><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolConst>"</symbolConst><expansionDelimiter>$(</expansionDelimiter><expansion>foo</expansion><expansionDelimiter>)</expansionDelimiter><symbolConst>"</symbolConst><br/>
<plain></plain><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<comment># Advanced real world example taken from init/Kconfig in Linux 5.10:</comment><br/>
<comment># Invoke the system shell /bin/sh with a command to pipe a C program with an</comment><br/>
<comment># asm goto statement to the C compiler that is set by the environment. If the</comment><br/>
<comment># exit code is 0 then set the default value of CC_HAS_ASM_GOTO_OUTPUT to y,</comment><br/>
<comment># otherwise to n.</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>CC_HAS_ASM_GOTO_OUTPUT</symbolVar><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>CC_HAS_ASM_GOTO</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><expansionDelimiter>$(</expansionDelimiter><expansion>success</expansion><argumentSeparator>,</argumentSeparator><expansion>echo 'int foo(int x) { asm goto ("": "=r"(x) ::: bar); return x; bar: return 0; }' | </expansion><expansionDelimiter>$(</expansionDelimiter><expansion>CC</expansion><expansionDelimiter>)</expansionDelimiter><expansion> -x c - -c -o /dev/null</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<comment># Real world example with irregular indentation</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>W1_MASTER_DS2490</symbolVar><br/>
<plain>	</plain><type>tristate</type><plain> </plain><quotedPrompt>"DS2490 USB <-> W1 transport layer for 1-wire"</quotedPrompt><br/>
<plain>  	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>USB</symbolVar><br/>
<plain>  	</plain><property>help</property><br/>
<helpText>	  Say Y here if you want to have a driver for DS2490 based USB <-> W1 bridges,</helpText><br/>
<helpText>	  for example DS9490*.</helpText><br/>
<helpText></helpText><br/>
<helpText>  	  This support is also available as a module.  If so, the module</helpText><br/>
<helpText>	  will be called ds2490.</helpText><br/>
<helpText></helpText><br/>
<comment># synthetic example</comment><br/>
<variable>to_upper</variable><assignmentOperator>=</assignmentOperator><expansionDelimiter>$(</expansionDelimiter><builtinFunction>shell</builtinFunction><argumentSeparator>,</argumentSeparator><expansion>echo </expansion><expansionDelimiter>$(</expansionDelimiter><expansion>1</expansion><expansionDelimiter>)</expansionDelimiter><expansion> | tr [:lower:] [:upper:]</expansion><expansionDelimiter>)</expansionDelimiter><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARGS_</symbolVar><expansionDelimiter>$(</expansionDelimiter><expansion>to_upper</expansion><argumentSeparator>,</argumentSeparator><expansionDelimiter>$(</expansionDelimiter><expansion>CC</expansion><expansionDelimiter>))</expansionDelimiter><br/>
<plain>	</plain><type>string</type><plain> </plain><quotedPrompt>"Arguments for the current compiler </quotedPrompt><escapedCharacter>\"</escapedCharacter><expansionDelimiter>$(</expansionDelimiter><expansion>CC</expansion><expansionDelimiter>)</expansionDelimiter><escapedCharacter>\"</escapedCharacter><quotedPrompt>"</quotedPrompt><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  This is a bad idea.</helpText><br/>
<helpText>	  See <</helpText><link>file:Documentation/completely/made-up.rst</link><helpText>></helpText><br/>
<helpText></helpText><br/>
<comment># binary operator in expression of an if statement</comment><br/>
<keyword>if</keyword><plain> </plain><symbolVar>CPU_SUPPORTS_CPUFREQ</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><symbolVar>MIPS_EXTERNAL_TIMER</symbolVar><br/>
<source>source</source><plain> </plain><quotedSourceString>"drivers/cpufreq/Kconfig"</quotedSourceString><br/>
<keyword>endif</keyword><br/>
<plain></plain><br/>
<comment># alert on characters (here a colon) that are ignored (taken from axTLS 2.1.5)</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>CONFIG_LUA_CORE</symbolVar><br/>
<plain>    </plain><type>string</type><plain> </plain><quotedPrompt>"Location of Lua CORE"</quotedPrompt><br/>
<plain>    </plain><property>default</property><plain> </plain><symbolConst>"/usr/local"</symbolConst><br/>
<plain>    </plain><property>help</property><badChar>:</badChar><br/>
<helpText>        If the Lua exists on another directory then this needs to be changed</helpText><br/>
<helpText></helpText><br/>
<keyword>comment</keyword><plain> </plain><quotedPrompt>"Comment texts know expansions, too: </quotedPrompt><expansionDelimiter>$(</expansionDelimiter><expansion>CC</expansion><expansionDelimiter>)</expansionDelimiter><quotedPrompt>, and the depends property:"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>A_BOOL</symbolVar><br/>
<plain></plain><br/>
<comment># "boolean" is now a free variable name ...</comment><br/>
<deprecatedIdentifier>boolean</deprecatedIdentifier><assignmentOperator>=</assignmentOperator><assignmentValue>foo</assignmentValue><br/>
<comment># ... but it looks like a bad idea. This may be disputed.</comment><br/>
<plain></plain><br/>
<comment># the three modern options</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>OPTIONS</symbolVar><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><option>allnoconfig_y</option><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><option>modules</option><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><option>defconfig_list</option><br/>
<plain></plain><br/>
<comment># old option "env" and obsolete custom options</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>OPTIONS</symbolVar><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><deprecatedOption>env</deprecatedOption><deprecatedOptionEq>=</deprecatedOptionEq><deprecatedUnquotedOptionValue>ARCH</deprecatedUnquotedOptionValue><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><unknownOption>custom-without-argument</unknownOption><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><unknownOption>custom-with-argument</unknownOption><deprecatedOptionEq>=</deprecatedOptionEq><deprecatedUnquotedOptionValue>ABC</deprecatedUnquotedOptionValue><br/>
<plain></plain><br/>
<comment># old syntax</comment><br/>
<keyword>menu</keyword><plain> </plain><deprecatedUnquotedPrompt>OLD_STYLE_PROMPT</deprecatedUnquotedPrompt><br/>
<property>visible</property><plain> </plain><property>if</property><plain> </plain><symbolVar>CPU_SUPPORTS_CPUFREQ</symbolVar><br/>
<plain></plain><br/>
<comment># busybox 1.31.1</comment><br/>
<source>source</source><plain> </plain><deprecatedUnquotedSourceString>libbb/Config.in</deprecatedUnquotedSourceString><br/>
<plain></plain><br/>
<comment># uClibc-ng-1.0.37</comment><br/>
<keyword>config</keyword><plain> </plain><symbolVar>DESIRED_TARGET_ARCH</symbolVar><br/>
<plain>	</plain><type>string</type><br/>
<plain>	</plain><keyword>option</keyword><plain> </plain><deprecatedOption>env</deprecatedOption><deprecatedOptionEq>=</deprecatedOptionEq><deprecatedQuotedOptionValue>"ARCH"</deprecatedQuotedOptionValue><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>OLD_HELP</symbolVar><br/>
<plain>	</plain><type>hex</type><br/>
<plain>	</plain><deprecatedProperty>---help---</deprecatedProperty><br/>
<helpText>		old help property</helpText><br/>
<helpText>	</helpText><property>default</property><plain> </plain><symbolVar>0x1CEC0FEE</symbolVar><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<comment># a few errors</comment><br/>
<error>allnoconfig_y</error><br/>
<error>bool</error><br/>
<error>def_bool</error><br/>
<error>def_tristate</error><br/>
<error>default</error><br/>
<error>defconfig_list</error><br/>
<error>depends</error><br/>
<error>endchoice</error><br/>
<error>endif</error><br/>
<error>help</error><br/>
<error>hex</error><br/>
<error>imply</error><br/>
<error>int</error><br/>
<error>mainmenu</error><br/>
<error>modules</error><br/>
<error>on</error><br/>
<error>option</error><br/>
<error>optional</error><br/>
<error>prompt</error><br/>
<error>range</error><br/>
<error>select</error><br/>
<error>string</error><br/>
<error>tristate</error><br/>
<error>visible</error><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>OK</symbolVar><br/>
<plain>    </plain><type>bool</type><plain> </plain><quotedPrompt>"still OK"</quotedPrompt><br/>
<plain>    </plain><property>help</property><br/>
<helpText>        still OK</helpText><br/>
<error>now=fail</error><br/>
<variable>andNow</variable><assignmentOperator>=</assignmentOperator><assignmentValue>OK</assignmentValue><br/>
